name: Daily Stock Data Update

on:
  schedule:
    - cron: '0 6 * * *'  # Run at 06:00 UTC every day (07:00 CET)
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    # START: Ersätt ditt gamla TA-Lib-steg med detta
    - name: Install TA-Lib C Library from source
      run: |
        # Download and extract TA-Lib source code
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/

        # Configure, build, and install the library
        # --prefix=/usr ensures it's installed to a standard location
        # where Python's ta-lib package can find it.
        ./configure --prefix=/usr
        make
        sudo make install
        sudo ldconfig 
    # SLUT: Nytt TA-Lib-steg
    - name: Install dependencies
      # --- START: Ändringar här ---
      env:
        # Peka mot var TA-Lib headers finns
        TA_INCLUDE_PATH: /usr/include
        # Peka mot var TA-Lib biblioteksfilerna finns
        TA_LIBRARY_PATH: /usr/lib
        # Säkerställ att ld hittar bibliotek under kompilering
        LD_LIBRARY_PATH: /usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
        # Alternativt för GCC, även om TA_LIBRARY_PATH brukar räcka
        # LDFLAGS: -L/usr/lib
        # CFLAGS: -I/usr/include
      run: uv pip install --system -r requirements.txt
      # --- SLUT: Ändringar här ---

    - name: Create data directory
      run: mkdir -p data

    - name: Run stock analyzer
      run: uv run python stock_analyzer.py
      env:
        PYTHONUNBUFFERED: 1  # Ensure logs are printed in real-time

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/*
        git diff --quiet && git diff --staged --quiet || git commit -m "Update stock data $(date +%Y%m%d)"
        git push
      continue-on-error: true  # Continue even if no changes to commit
