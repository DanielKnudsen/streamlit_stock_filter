name: Daily Stock Data Update

on:
  schedule:
    - cron: '0 4 * * 2-6'  # Run at 05:00 UTC Tuesday through Saturday
  workflow_dispatch:  # Allow manual trigger

env:
  ENVIRONMENT: remote
  YFINANCE_TIMEOUT: 60
  REQUESTS_TIMEOUT: 60

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}
        lfs: false
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: '0.4.18'
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: uv pip install -r requirements.txt
    
    - name: Verify dependencies
      run: |
        source .venv/bin/activate
        pip list
        python -c "import pandas; import yfinance; import finta; import yaml; import requests; import bs4; print('Dependencies verified')"
    
    - name: Create data and tickers directories
      run: |
        mkdir -p data/remote
        # Copy existing tickers file if it doesn't exist in remote
        if [ -f "data/local/tickers_list.csv" ] && [ ! -f "data/remote/tickers_list.csv" ]; then
          cp data/local/tickers_list.csv data/remote/tickers_list.csv
          echo "Copied local tickers file as fallback"
        fi
    
    - name: Run ticker scraper
      run: |
        source .venv/bin/activate
        # Add timeout and retry for ticker scraper
        for attempt in {1..2}; do
          echo "Attempt $attempt to run scrape_tickers.py"
          if timeout 600 uv run python scrape_tickers.py > scrape_tickers.log 2>&1; then
            echo "scrape_tickers.py completed successfully on attempt $attempt"
            break
          else
            echo "Attempt $attempt failed, waiting 30 seconds before retry..."
            sleep 30
            if [ $attempt -eq 2 ]; then
              echo "Ticker scraping failed, but continuing with existing tickers..."
              # Don't exit, continue with existing ticker file
            fi
          fi
        done
    
    - name: Run stock analyzer
      run: |
        source .venv/bin/activate
        # Add retry logic with delays and fallback to fewer tickers
        for attempt in {1..3}; do
          echo "Attempt $attempt to run rank.py"
          if timeout 1800 uv run python rank.py > rank.log 2>&1; then
            echo "rank.py completed successfully on attempt $attempt"
            break
          else
            echo "Attempt $attempt failed"
            if [ $attempt -eq 3 ]; then
              echo "All attempts failed - trying with reduced ticker set"
              # Create a smaller ticker file for emergency use
              if [ -f "data/remote/tickers_list.csv" ]; then
                head -n 51 data/remote/tickers_list.csv > data/remote/tickers_list_small.csv
                # Backup original and use small version
                mv data/remote/tickers_list.csv data/remote/tickers_list_full.csv
                mv data/remote/tickers_list_small.csv data/remote/tickers_list.csv
                echo "Trying with reduced ticker set (50 tickers)"
                if timeout 1800 uv run python rank.py > rank.log 2>&1; then
                  echo "Completed with reduced ticker set"
                  break
                else
                  # Restore full ticker list
                  mv data/remote/tickers_list_full.csv data/remote/tickers_list.csv
                  echo "Even reduced set failed"
                  exit 1
                fi
              else
                exit 1
              fi
            else
              echo "Waiting 60 seconds before retry..."
              sleep 60
            fi
          fi
        done
    
    - name: Commit and push updated data
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add data/remote/*
        if ! git diff --staged --quiet; then
          git commit -m "Update stock data and tickers $(date -u +%Y-%m-%d)"
          git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:main
        fi
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: workflow-logs
        path: |
          scrape_tickers.log
          rank.log
    
    - name: Show last lines of logs
      if: failure()
      run: |
        tail -n 20 scrape_tickers.log || true
        tail -n 20 rank.log || true